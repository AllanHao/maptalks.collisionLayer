/*!
 * maptalks.collisionLayer v0.1.1
 * LICENSE : MIT
 * (c) 2016-2017 maptalks.org
 */
/*!
 * requires maptalks@>=0.36.0 
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("maptalks"),require("rbush")):"function"==typeof define&&define.amd?define(["exports","maptalks","rbush"],t):t(e.maptalks=e.maptalks||{},e.maptalks,e.rbush)}(this,function(e,t,r){"use strict";function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):function(e,t){for(var r=Object.getOwnPropertyNames(t),o=0;o<r.length;o++){var i=r[o],n=Object.getOwnPropertyDescriptor(t,i);n&&n.configurable&&void 0===e[i]&&Object.defineProperty(e,i,n)}}(e,t))}r=r&&r.hasOwnProperty("default")?r.default:r;var i=function(e){function i(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return o(i,e),i.prototype.onAdd=function(){this.map.on("viewchange",this.onViewChange,this),this._rbush=r(),this._hideMarkers=null},i.prototype.onViewChange=function(){var e=this;setTimeout(function(){return e.updateCollision()},0)},i.prototype.updateCollision=function(){var e=this;this._rbush.clear(),this._hideMarkers&&this._hideMarkers.remove();var r=[],o=this.options,i=o.activeId,n=o.hidePointsSymbol,s=this.getGeometryById(i),a=this.getGeometries(function(e){return"Point"===e.type&&e});s&&(this._rbush.insert(this.getMarkerBox(s)),s.show()),a.forEach(function(t){if(s!==t){var o=e.getMarkerBox(t);0===e._rbush.search(o).length?(e._rbush.insert(o),t.show()):(t.hide(),r.push(t.getCoordinates()))}}),n&&(this._hideMarkers=new t.MultiPoint(r,{symbol:n}).addTo(this),this._hideMarkers.bringToBack())},i.prototype.getMarkerBox=function(e){var t=e.getSize(),r=t.width,o=t.height,i=this.map.coordinateToContainerPoint(e.getCoordinates()),n=i.x,s=i.y;return{minX:Math.round(n-r/2),maxX:Math.round(n+r/2),minY:Math.round(s-o/2),maxY:Math.round(s+o/2)}},i}(t.VectorLayer);i.mergeOptions({activeId:null,hidePointsSymbol:{markerType:"ellipse",markerFillOpacity:.3,markerLineOpacity:.3,markerWidth:3,markerHeight:3}}),e.CollisionLayer=i,Object.defineProperty(e,"__esModule",{value:!0}),"undefined"!=typeof console&&console.log("maptalks.collisionLayer v0.1.1, requires maptalks@>=0.36.0.")});